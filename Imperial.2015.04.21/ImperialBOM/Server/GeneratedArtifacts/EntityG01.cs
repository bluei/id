

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Company : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Company entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Company()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Company(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Company> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Company.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CompanyType
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address1);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address2);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.State);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Country
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Country);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Zip
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Zip);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Zip, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zip_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zip_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zip_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Phone
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Phone);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Phone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Website
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Website);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Website, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Website_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Website_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Website_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> LegacyVendorId
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyVendorId);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyVendorId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyVendorId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyVendorId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyVendorId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> LegacyRepId
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyRepId);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyRepId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyRepId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyRepId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyRepId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> LegacyCompanyId
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyCompanyId);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyCompanyId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyCompanyId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyCompanyId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LegacyCompanyId_Changed();

        /// <summary>
        /// Used to populate the next job number.  Automaticaly managed.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> NextJobNumber
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.NextJobNumber);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.NextJobNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NextJobNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NextJobNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NextJobNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> DefaultRepCommission
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DefaultRepCommission);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DefaultRepCommission, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultRepCommission_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultRepCommission_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultRepCommission_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsActive
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsActive);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsActive, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CreatedDate);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CreatedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AuditInfo
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.AuditInfo);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditInfo_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditInfo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> DefaultLeadDays
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DefaultLeadDays);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DefaultLeadDays, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultLeadDays_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultLeadDays_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultLeadDays_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Contact> Contacts
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contacts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Contact> ContactsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contacts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Product> Products
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Products);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Product> ProductsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Products);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Job> Jobs
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Jobs);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Job> JobsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Jobs);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PurchaseOrder> PurchaseOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.JobMasterBOMItem> JobMasterBOMItems
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobMasterBOMItems);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.JobMasterBOMItem> JobMasterBOMItemsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobMasterBOMItems);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Company,
                global::LightSwitchApplication.Company.DetailsClass,
                global::LightSwitchApplication.Company.DetailsClass.IImplementation,
                global::LightSwitchApplication.Company.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>.Entry
                __CompanyEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>.Entry(
                    global::LightSwitchApplication.Company.DetailsClass.__Company_CreateNew,
                    global::LightSwitchApplication.Company.DetailsClass.__Company_Created,
                    global::LightSwitchApplication.Company.DetailsClass.__Company_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Company __Company_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Company> es)
            {
                return new global::LightSwitchApplication.Company(es);
            }
            private static void __Company_Created(global::LightSwitchApplication.Company e)
            {
                e.Company_Created();
            }
            private static bool __Company_AllowSaveWithErrors(global::LightSwitchApplication.Company e)
            {
                bool result = false;
                e.Company_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Company.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> CompanyType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Address1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Address2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Zip
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Zip) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Phone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Phone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Website
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Website) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> LegacyVendorId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyVendorId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> LegacyRepId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyRepId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> LegacyCompanyId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.LegacyCompanyId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> NextJobNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.NextJobNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<decimal>> DefaultRepCommission
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DefaultRepCommission) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, bool> IsActive
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsActive) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CreatedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> AuditInfo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.AuditInfo) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> DefaultLeadDays
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DefaultLeadDays) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact> Contacts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contacts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Product> Products
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Products) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Product>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Job> Jobs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Jobs) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Job>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobMasterBOMItem> JobMasterBOMItems
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobMasterBOMItems) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobMasterBOMItem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string CompanyType { get; set; }
                new string Name { get; set; }
                new string Address1 { get; set; }
                new string Address2 { get; set; }
                new string City { get; set; }
                new string State { get; set; }
                new string Country { get; set; }
                new string Zip { get; set; }
                new string Phone { get; set; }
                new string Fax { get; set; }
                new string Website { get; set; }
                new global::System.Nullable<int> LegacyVendorId { get; set; }
                new global::System.Nullable<int> LegacyRepId { get; set; }
                new global::System.Nullable<int> LegacyCompanyId { get; set; }
                new global::System.Nullable<int> NextJobNumber { get; set; }
                new global::System.Nullable<decimal> DefaultRepCommission { get; set; }
                new bool IsActive { get; set; }
                new global::System.Nullable<global::System.DateTime> CreatedDate { get; set; }
                new string CreatedBy { get; set; }
                new global::System.Nullable<int> DefaultLeadDays { get; set; }
                new byte[] RowVersion { get; set; }
                new string Notes { get; set; }
                new global::System.Collections.IEnumerable Contacts { get; }
                new global::System.Collections.IEnumerable Products { get; }
                new global::System.Collections.IEnumerable Jobs { get; }
                new global::System.Collections.IEnumerable PurchaseOrders { get; }
                new global::System.Collections.IEnumerable JobMasterBOMItems { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    CompanyType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "CompanyType",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_OnValueChanged);
                private static void _CompanyType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyType, sf);
                }
                private static bool _CompanyType_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CompanyType_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyType_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyType_Validate(r);
                }
                private static string _CompanyType_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyType;
                }
                private static void _CompanyType_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CompanyType = v;
                }
                private static void _CompanyType_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CompanyType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Address1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Address1",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_OnValueChanged);
                private static void _Address1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1, sf);
                }
                private static bool _Address1_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Address1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Validate(r);
                }
                private static string _Address1_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1;
                }
                private static void _Address1_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1 = v;
                }
                private static void _Address1_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Address1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Address2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Address2",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_OnValueChanged);
                private static void _Address2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2, sf);
                }
                private static bool _Address2_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Address2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Validate(r);
                }
                private static string _Address2_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2;
                }
                private static void _Address2_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2 = v;
                }
                private static void _Address2_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Address2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_OnValueChanged);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static bool _State_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.State_IsReadOnly(ref result);
                    return result;
                }
                private static void _State_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.State;
                }
                private static void _State_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.State = v;
                }
                private static void _State_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Country",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_OnValueChanged);
                private static void _Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Country, sf);
                }
                private static bool _Country_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _Country_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Country_Validate(r);
                }
                private static string _Country_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Country;
                }
                private static void _Country_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Country = v;
                }
                private static void _Country_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Zip = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Zip",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Zip_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Zip_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Zip_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Zip_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Zip_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Zip_OnValueChanged);
                private static void _Zip_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Zip, sf);
                }
                private static bool _Zip_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Zip_IsReadOnly(ref result);
                    return result;
                }
                private static void _Zip_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Zip_Validate(r);
                }
                private static string _Zip_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Zip;
                }
                private static void _Zip_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Zip = v;
                }
                private static void _Zip_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Zip_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Phone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Phone",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Phone_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Phone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Phone_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Phone_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Phone_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Phone_OnValueChanged);
                private static void _Phone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Phone, sf);
                }
                private static bool _Phone_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Phone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Phone_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Phone_Validate(r);
                }
                private static string _Phone_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Phone;
                }
                private static void _Phone_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Phone = v;
                }
                private static void _Phone_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Phone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Fax",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_OnValueChanged);
                private static void _Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Fax, sf);
                }
                private static bool _Fax_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fax_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fax_Validate(r);
                }
                private static string _Fax_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Fax;
                }
                private static void _Fax_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fax = v;
                }
                private static void _Fax_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Website = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Website",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_OnValueChanged);
                private static void _Website_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Website, sf);
                }
                private static bool _Website_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Website_IsReadOnly(ref result);
                    return result;
                }
                private static void _Website_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Website_Validate(r);
                }
                private static string _Website_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Website;
                }
                private static void _Website_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Website = v;
                }
                private static void _Website_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Website_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    LegacyVendorId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "LegacyVendorId",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyVendorId_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyVendorId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyVendorId_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyVendorId_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyVendorId_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyVendorId_OnValueChanged);
                private static void _LegacyVendorId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._LegacyVendorId, sf);
                }
                private static bool _LegacyVendorId_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.LegacyVendorId_IsReadOnly(ref result);
                    return result;
                }
                private static void _LegacyVendorId_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LegacyVendorId_Validate(r);
                }
                private static global::System.Nullable<int> _LegacyVendorId_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.LegacyVendorId;
                }
                private static void _LegacyVendorId_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.LegacyVendorId = v;
                }
                private static void _LegacyVendorId_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.LegacyVendorId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    LegacyRepId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "LegacyRepId",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyRepId_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyRepId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyRepId_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyRepId_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyRepId_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyRepId_OnValueChanged);
                private static void _LegacyRepId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._LegacyRepId, sf);
                }
                private static bool _LegacyRepId_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.LegacyRepId_IsReadOnly(ref result);
                    return result;
                }
                private static void _LegacyRepId_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LegacyRepId_Validate(r);
                }
                private static global::System.Nullable<int> _LegacyRepId_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.LegacyRepId;
                }
                private static void _LegacyRepId_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.LegacyRepId = v;
                }
                private static void _LegacyRepId_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.LegacyRepId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    LegacyCompanyId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "LegacyCompanyId",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyCompanyId_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyCompanyId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyCompanyId_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyCompanyId_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyCompanyId_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._LegacyCompanyId_OnValueChanged);
                private static void _LegacyCompanyId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._LegacyCompanyId, sf);
                }
                private static bool _LegacyCompanyId_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.LegacyCompanyId_IsReadOnly(ref result);
                    return result;
                }
                private static void _LegacyCompanyId_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LegacyCompanyId_Validate(r);
                }
                private static global::System.Nullable<int> _LegacyCompanyId_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.LegacyCompanyId;
                }
                private static void _LegacyCompanyId_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.LegacyCompanyId = v;
                }
                private static void _LegacyCompanyId_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.LegacyCompanyId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    NextJobNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "NextJobNumber",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._NextJobNumber_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._NextJobNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._NextJobNumber_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._NextJobNumber_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._NextJobNumber_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._NextJobNumber_OnValueChanged);
                private static void _NextJobNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._NextJobNumber, sf);
                }
                private static bool _NextJobNumber_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.NextJobNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _NextJobNumber_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NextJobNumber_Validate(r);
                }
                private static global::System.Nullable<int> _NextJobNumber_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.NextJobNumber;
                }
                private static void _NextJobNumber_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.NextJobNumber = v;
                }
                private static void _NextJobNumber_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.NextJobNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<decimal>>.Entry
                    DefaultRepCommission = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "DefaultRepCommission",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultRepCommission_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultRepCommission_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultRepCommission_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultRepCommission_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultRepCommission_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultRepCommission_OnValueChanged);
                private static void _DefaultRepCommission_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultRepCommission, sf);
                }
                private static bool _DefaultRepCommission_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.DefaultRepCommission_IsReadOnly(ref result);
                    return result;
                }
                private static void _DefaultRepCommission_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DefaultRepCommission_Validate(r);
                }
                private static global::System.Nullable<decimal> _DefaultRepCommission_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultRepCommission;
                }
                private static void _DefaultRepCommission_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.DefaultRepCommission = v;
                }
                private static void _DefaultRepCommission_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.DefaultRepCommission_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, bool>.Entry
                    IsActive = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, bool>.Entry(
                        "IsActive",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_OnValueChanged);
                private static void _IsActive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._IsActive, sf);
                }
                private static bool _IsActive_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.IsActive_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsActive_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsActive_Validate(r);
                }
                private static bool _IsActive_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.IsActive;
                }
                private static void _IsActive_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsActive = v;
                }
                private static void _IsActive_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.IsActive_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedDate",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedDate_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedDate_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedDate_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedDate_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedDate_OnValueChanged);
                private static void _CreatedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedDate, sf);
                }
                private static bool _CreatedDate_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CreatedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedDate_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedDate_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedDate;
                }
                private static void _CreatedDate_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CreatedDate = global::LightSwitchApplication.Company.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedDate_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CreatedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    AuditInfo = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "AuditInfo",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._AuditInfo_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._AuditInfo_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._AuditInfo_ComputeValue);
                private static void _AuditInfo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditInfo, sf);
                }
                private static void _AuditInfo_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AuditInfo_Validate(r);
                }
                private static string _AuditInfo_ComputeValue(global::LightSwitchApplication.Company e)
                {
                    string value = default(string);
                    e.AuditInfo_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    DefaultLeadDays = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "DefaultLeadDays",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultLeadDays_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultLeadDays_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultLeadDays_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultLeadDays_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultLeadDays_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DefaultLeadDays_OnValueChanged);
                private static void _DefaultLeadDays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultLeadDays, sf);
                }
                private static bool _DefaultLeadDays_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.DefaultLeadDays_IsReadOnly(ref result);
                    return result;
                }
                private static void _DefaultLeadDays_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DefaultLeadDays_Validate(r);
                }
                private static global::System.Nullable<int> _DefaultLeadDays_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultLeadDays;
                }
                private static void _DefaultLeadDays_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.DefaultLeadDays = v;
                }
                private static void _DefaultLeadDays_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.DefaultLeadDays_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contacts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contacts",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contacts_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contacts_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contacts_GetEntityCollection);
                private static void _Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Contacts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact> _Contacts_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contacts, ref d._Contacts);
                }
                private static global::System.Collections.IEnumerable _Contacts_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Contacts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Product>.Entry
                    Products = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Product>.Entry(
                        "Products",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Products_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Products_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Products_GetEntityCollection);
                private static void _Products_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Product>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Products, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> _Products_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Products, ref d._Products);
                }
                private static global::System.Collections.IEnumerable _Products_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Products;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Job>.Entry
                    Jobs = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Job>.Entry(
                        "Jobs",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Jobs_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Jobs_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Jobs_GetEntityCollection);
                private static void _Jobs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Job>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Jobs, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Job> _Jobs_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Job, global::LightSwitchApplication.Job.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Jobs, ref d._Jobs);
                }
                private static global::System.Collections.IEnumerable _Jobs_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Jobs;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry
                    PurchaseOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry(
                        "PurchaseOrders",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._PurchaseOrders_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._PurchaseOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._PurchaseOrders_GetEntityCollection);
                private static void _PurchaseOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchaseOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> _PurchaseOrders_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.PurchaseOrder, global::LightSwitchApplication.PurchaseOrder.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders, ref d._PurchaseOrders);
                }
                private static global::System.Collections.IEnumerable _PurchaseOrders_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchaseOrders;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobMasterBOMItem>.Entry
                    JobMasterBOMItems = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobMasterBOMItem>.Entry(
                        "JobMasterBOMItems",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._JobMasterBOMItems_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._JobMasterBOMItems_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._JobMasterBOMItems_GetEntityCollection);
                private static void _JobMasterBOMItems_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobMasterBOMItem>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._JobMasterBOMItems, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.JobMasterBOMItem> _JobMasterBOMItems_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.JobMasterBOMItem, global::LightSwitchApplication.JobMasterBOMItem.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobMasterBOMItems, ref d._JobMasterBOMItems);
                }
                private static global::System.Collections.IEnumerable _JobMasterBOMItems_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.JobMasterBOMItems;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _CompanyType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Address1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Address2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Zip;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Phone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Website;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _LegacyVendorId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _LegacyRepId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _LegacyCompanyId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _NextJobNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<decimal>>.Data _DefaultRepCommission;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, bool>.Data _IsActive;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _AuditInfo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _DefaultLeadDays;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contacts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Product>.Data _Products;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Job>.Data _Jobs;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data _PurchaseOrders;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobMasterBOMItem>.Data _JobMasterBOMItems;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Contact : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Contact entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contact()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contact(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contact> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Contact.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirstName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FirstName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FirstName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LastName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.LastName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.LastName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Position
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Position);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Position, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Position_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Position_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Position_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WorkPhone
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.WorkPhone);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.WorkPhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkPhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkPhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkPhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MobilePhone
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MobilePhone);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MobilePhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MobilePhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MobilePhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MobilePhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Fax);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Email
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Email);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Email, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsPrimary
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsPrimary);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsPrimary, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPrimary_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPrimary_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsPrimary_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FullName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FullName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Company Company
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Company);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Company, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Job> Jobs
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Jobs);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Job> JobsQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Jobs);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Job> JobCustomerContact
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.JobCustomerContact);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Job> JobCustomerContactQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.JobCustomerContact);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PurchaseOrder> PurchaseOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Contact,
                global::LightSwitchApplication.Contact.DetailsClass,
                global::LightSwitchApplication.Contact.DetailsClass.IImplementation,
                global::LightSwitchApplication.Contact.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>.Entry
                __ContactEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>.Entry(
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_CreateNew,
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_Created,
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Contact __Contact_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contact> es)
            {
                return new global::LightSwitchApplication.Contact(es);
            }
            private static void __Contact_Created(global::LightSwitchApplication.Contact e)
            {
                e.Contact_Created();
            }
            private static bool __Contact_AllowSaveWithErrors(global::LightSwitchApplication.Contact e)
            {
                bool result = false;
                e.Contact_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Contact.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> FirstName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FirstName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> LastName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.LastName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Position
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Position) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> WorkPhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.WorkPhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> MobilePhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MobilePhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Email
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Email) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> IsPrimary
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsPrimary) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> FullName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FullName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company> Company
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Company) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job> Jobs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Jobs) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job> JobCustomerContact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.JobCustomerContact) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PurchaseOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.PurchaseOrder>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string FirstName { get; set; }
                new string LastName { get; set; }
                new string Position { get; set; }
                new string WorkPhone { get; set; }
                new string MobilePhone { get; set; }
                new string Fax { get; set; }
                new string Email { get; set; }
                new string Notes { get; set; }
                new global::System.Nullable<int> IsPrimary { get; set; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Company { get; set; }
                new global::System.Collections.IEnumerable Jobs { get; }
                new global::System.Collections.IEnumerable JobCustomerContact { get; }
                new global::System.Collections.IEnumerable PurchaseOrders { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    FirstName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "FirstName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_OnValueChanged);
                private static void _FirstName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._FirstName, sf);
                }
                private static bool _FirstName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.FirstName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FirstName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FirstName_Validate(r);
                }
                private static string _FirstName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.FirstName;
                }
                private static void _FirstName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FirstName = v;
                }
                private static void _FirstName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.FirstName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    LastName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "LastName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_OnValueChanged);
                private static void _LastName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._LastName, sf);
                }
                private static bool _LastName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.LastName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastName_Validate(r);
                }
                private static string _LastName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.LastName;
                }
                private static void _LastName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LastName = v;
                }
                private static void _LastName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.LastName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Position = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Position",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_OnValueChanged);
                private static void _Position_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Position, sf);
                }
                private static bool _Position_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Position_IsReadOnly(ref result);
                    return result;
                }
                private static void _Position_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Position_Validate(r);
                }
                private static string _Position_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Position;
                }
                private static void _Position_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Position = v;
                }
                private static void _Position_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Position_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    WorkPhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "WorkPhone",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._WorkPhone_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._WorkPhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._WorkPhone_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._WorkPhone_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._WorkPhone_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._WorkPhone_OnValueChanged);
                private static void _WorkPhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkPhone, sf);
                }
                private static bool _WorkPhone_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.WorkPhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _WorkPhone_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkPhone_Validate(r);
                }
                private static string _WorkPhone_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkPhone;
                }
                private static void _WorkPhone_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WorkPhone = v;
                }
                private static void _WorkPhone_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.WorkPhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    MobilePhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "MobilePhone",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MobilePhone_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MobilePhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MobilePhone_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MobilePhone_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MobilePhone_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MobilePhone_OnValueChanged);
                private static void _MobilePhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._MobilePhone, sf);
                }
                private static bool _MobilePhone_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.MobilePhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _MobilePhone_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MobilePhone_Validate(r);
                }
                private static string _MobilePhone_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.MobilePhone;
                }
                private static void _MobilePhone_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MobilePhone = v;
                }
                private static void _MobilePhone_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.MobilePhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Fax",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Fax_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Fax_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Fax_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Fax_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Fax_OnValueChanged);
                private static void _Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Fax, sf);
                }
                private static bool _Fax_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fax_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fax_Validate(r);
                }
                private static string _Fax_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Fax;
                }
                private static void _Fax_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fax = v;
                }
                private static void _Fax_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Email = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Email",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_OnValueChanged);
                private static void _Email_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Email, sf);
                }
                private static bool _Email_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Email_IsReadOnly(ref result);
                    return result;
                }
                private static void _Email_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Email_Validate(r);
                }
                private static string _Email_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Email;
                }
                private static void _Email_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Email = v;
                }
                private static void _Email_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Email_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    IsPrimary = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsPrimary",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsPrimary_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsPrimary_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsPrimary_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsPrimary_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsPrimary_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsPrimary_OnValueChanged);
                private static void _IsPrimary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._IsPrimary, sf);
                }
                private static bool _IsPrimary_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.IsPrimary_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsPrimary_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsPrimary_Validate(r);
                }
                private static global::System.Nullable<int> _IsPrimary_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.IsPrimary;
                }
                private static void _IsPrimary_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsPrimary = v;
                }
                private static void _IsPrimary_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.IsPrimary_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    FullName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "FullName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_ComputeValue);
                private static void _FullName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._FullName, sf);
                }
                private static void _FullName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FullName_Validate(r);
                }
                private static string _FullName_ComputeValue(global::LightSwitchApplication.Contact e)
                {
                    string value = default(string);
                    e.FullName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Company = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Company",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_Refresh,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Company_OnValueChanged);
                private static void _Company_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Company, sf);
                }
                private static bool _Company_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Company_IsReadOnly(ref result);
                    return result;
                }
                private static void _Company_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Company_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Company_GetCoreImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Company;
                }
                private static global::LightSwitchApplication.Company _Company_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::LightSwitchApplication.Company v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Company, ref d._Company, (i, ev) => i.Company = ev, v);
                }
                private static void _Company_Refresh(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Company_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Entry
                    Jobs = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Entry(
                        "Jobs",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Jobs_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Jobs_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Jobs_GetEntityCollection);
                private static void _Jobs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Jobs, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Job> _Jobs_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Job, global::LightSwitchApplication.Job.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Jobs, ref d._Jobs);
                }
                private static global::System.Collections.IEnumerable _Jobs_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Jobs;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Entry
                    JobCustomerContact = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Entry(
                        "JobCustomerContact",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._JobCustomerContact_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._JobCustomerContact_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._JobCustomerContact_GetEntityCollection);
                private static void _JobCustomerContact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._JobCustomerContact, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Job> _JobCustomerContact_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Job, global::LightSwitchApplication.Job.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.JobCustomerContact, ref d._JobCustomerContact);
                }
                private static global::System.Collections.IEnumerable _JobCustomerContact_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.JobCustomerContact;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry
                    PurchaseOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry(
                        "PurchaseOrders",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PurchaseOrders_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PurchaseOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PurchaseOrders_GetEntityCollection);
                private static void _PurchaseOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchaseOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> _PurchaseOrders_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.PurchaseOrder, global::LightSwitchApplication.PurchaseOrder.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PurchaseOrders, ref d._PurchaseOrders);
                }
                private static global::System.Collections.IEnumerable _PurchaseOrders_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchaseOrders;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _FirstName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _LastName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Position;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _WorkPhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _MobilePhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Email;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _IsPrimary;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _FullName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Data _Company;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Data _Jobs;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Job>.Data _JobCustomerContact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data _PurchaseOrders;
            
        }
    
        #endregion
    }
    
    #endregion
}
