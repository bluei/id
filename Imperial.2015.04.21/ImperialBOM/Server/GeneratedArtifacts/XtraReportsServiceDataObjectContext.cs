//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class XtraReportsServiceData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new XtraReportsServiceData object using the connection string found in the 'XtraReportsServiceData' section of the application configuration file.
        /// </summary>
        public XtraReportsServiceData() : base("name=XtraReportsServiceData", "XtraReportsServiceData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new XtraReportsServiceData object.
        /// </summary>
        public XtraReportsServiceData(string connectionString) : base(connectionString, "XtraReportsServiceData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new XtraReportsServiceData object.
        /// </summary>
        public XtraReportsServiceData(EntityConnection connection) : base(connection, "XtraReportsServiceData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageEnvelope> MessageEnvelopes
        {
            get
            {
                if ((_MessageEnvelopes == null))
                {
                    _MessageEnvelopes = base.CreateObjectSet<MessageEnvelope>("MessageEnvelopes");
                }
                return _MessageEnvelopes;
            }
        }
        private ObjectSet<MessageEnvelope> _MessageEnvelopes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageEnvelopes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageEnvelopes(MessageEnvelope messageEnvelope)
        {
            base.AddObject("MessageEnvelopes", messageEnvelope);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MessageEnvelope")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageEnvelope : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageEnvelope object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        public static MessageEnvelope CreateMessageEnvelope(global::System.Int32 id, global::System.Int32 rowVersion)
        {
            MessageEnvelope messageEnvelope = new MessageEnvelope();
            messageEnvelope.Id = id;
            messageEnvelope.RowVersion = rowVersion;
            return messageEnvelope;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RowVersion
        {
            get
            {
                return _RowVersion;
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Int32 _RowVersion;
        partial void OnRowVersionChanging(global::System.Int32 value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Message
        {
            get
            {
                return StructuralObject.GetValidValue(_Message);
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = value;
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.Byte[] _Message;
        partial void OnMessageChanging(global::System.Byte[] value);
        partial void OnMessageChanged();

        #endregion

    
    }

    #endregion

    
}
