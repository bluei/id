

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReleaseIssue : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ReleaseIssue entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReleaseIssue()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReleaseIssue(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReleaseIssue> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ReleaseIssue.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssue_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.DateCreated);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.DateCreated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCreated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCreated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCreated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Screen
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Screen);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Screen, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Screen_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Screen_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Screen_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Problem
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Problem);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Problem, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Problem_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Problem_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Problem_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Severity
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Severity);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Severity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsFixed
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.IsFixed);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.IsFixed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsFixed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsFixed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsFixed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Release Release
        {
            get
            {
                return global::LightSwitchApplication.ReleaseIssue.DetailsClass.GetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Release);
            }
            set
            {
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.SetValue(this, global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Release, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Release_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Release_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Release_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ReleaseIssue,
                global::LightSwitchApplication.ReleaseIssue.DetailsClass,
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.IImplementation,
                global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass>.Entry
                __ReleaseIssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReleaseIssue.DetailsClass.__ReleaseIssue_CreateNew,
                    global::LightSwitchApplication.ReleaseIssue.DetailsClass.__ReleaseIssue_Created,
                    global::LightSwitchApplication.ReleaseIssue.DetailsClass.__ReleaseIssue_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ReleaseIssue __ReleaseIssue_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReleaseIssue> es)
            {
                return new global::LightSwitchApplication.ReleaseIssue(es);
            }
            private static void __ReleaseIssue_Created(global::LightSwitchApplication.ReleaseIssue e)
            {
                e.ReleaseIssue_Created();
            }
            private static bool __ReleaseIssue_AllowSaveWithErrors(global::LightSwitchApplication.ReleaseIssue e)
            {
                bool result = false;
                e.ReleaseIssue_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::System.DateTime> DateCreated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.DateCreated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string> Screen
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Screen) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string> Problem
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Problem) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int> Severity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Severity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, bool> IsFixed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.IsFixed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::LightSwitchApplication.Release> Release
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Release) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::LightSwitchApplication.Release>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.DateTime DateCreated { get; set; }
                new string CreatedBy { get; set; }
                new string Screen { get; set; }
                new string Problem { get; set; }
                new string Notes { get; set; }
                new int Severity { get; set; }
                new bool IsFixed { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Release { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::System.DateTime>.Entry
                    DateCreated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::System.DateTime>.Entry(
                        "DateCreated",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._DateCreated_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._DateCreated_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._DateCreated_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._DateCreated_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._DateCreated_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._DateCreated_OnValueChanged);
                private static void _DateCreated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCreated, sf);
                }
                private static bool _DateCreated_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.DateCreated_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCreated_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCreated_Validate(r);
                }
                private static global::System.DateTime _DateCreated_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCreated;
                }
                private static void _DateCreated_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateCreated = global::LightSwitchApplication.ReleaseIssue.DetailsClass.TruncateDate(v);
                }
                private static void _DateCreated_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.DateCreated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry
                    Screen = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry(
                        "Screen",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Screen_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Screen_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Screen_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Screen_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Screen_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Screen_OnValueChanged);
                private static void _Screen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Screen, sf);
                }
                private static bool _Screen_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.Screen_IsReadOnly(ref result);
                    return result;
                }
                private static void _Screen_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Screen_Validate(r);
                }
                private static string _Screen_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.Screen;
                }
                private static void _Screen_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Screen = v;
                }
                private static void _Screen_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.Screen_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry
                    Problem = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry(
                        "Problem",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Problem_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Problem_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Problem_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Problem_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Problem_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Problem_OnValueChanged);
                private static void _Problem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Problem, sf);
                }
                private static bool _Problem_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.Problem_IsReadOnly(ref result);
                    return result;
                }
                private static void _Problem_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Problem_Validate(r);
                }
                private static string _Problem_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.Problem;
                }
                private static void _Problem_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Problem = v;
                }
                private static void _Problem_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.Problem_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Entry
                    Severity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Entry(
                        "Severity",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Severity_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Severity_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Severity_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Severity_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Severity_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Severity_OnValueChanged);
                private static void _Severity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Severity, sf);
                }
                private static bool _Severity_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.Severity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Severity_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Severity_Validate(r);
                }
                private static int _Severity_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.Severity;
                }
                private static void _Severity_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Severity = v;
                }
                private static void _Severity_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.Severity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, bool>.Entry
                    IsFixed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, bool>.Entry(
                        "IsFixed",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._IsFixed_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._IsFixed_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._IsFixed_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._IsFixed_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._IsFixed_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._IsFixed_OnValueChanged);
                private static void _IsFixed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._IsFixed, sf);
                }
                private static bool _IsFixed_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.IsFixed_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsFixed_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsFixed_Validate(r);
                }
                private static bool _IsFixed_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.IsFixed;
                }
                private static void _IsFixed_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsFixed = v;
                }
                private static void _IsFixed_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.IsFixed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::LightSwitchApplication.Release>.Entry
                    Release = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::LightSwitchApplication.Release>.Entry(
                        "Release",
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_Stub,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_Validate,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_GetCoreImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_GetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_SetImplementationValue,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_Refresh,
                        global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties._Release_OnValueChanged);
                private static void _Release_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::LightSwitchApplication.Release>.Data> c, global::LightSwitchApplication.ReleaseIssue.DetailsClass d, object sf)
                {
                    c(d, ref d._Release, sf);
                }
                private static bool _Release_ComputeIsReadOnly(global::LightSwitchApplication.ReleaseIssue e)
                {
                    bool result = false;
                    e.Release_IsReadOnly(ref result);
                    return result;
                }
                private static void _Release_Validate(global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Release_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Release_GetCoreImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.ImplementationEntity.Release;
                }
                private static global::LightSwitchApplication.Release _Release_GetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Release, global::LightSwitchApplication.Release.DetailsClass>(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Release, ref d._Release);
                }
                private static void _Release_SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass d, global::LightSwitchApplication.Release v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Release, ref d._Release, (i, ev) => i.Release = ev, v);
                }
                private static void _Release_Refresh(global::LightSwitchApplication.ReleaseIssue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ReleaseIssue.DetailsClass.PropertySetProperties.Release, ref d._Release);
                }
                private static void _Release_OnValueChanged(global::LightSwitchApplication.ReleaseIssue e)
                {
                    e.Release_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::System.DateTime>.Data _DateCreated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data _Screen;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data _Problem;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, int>.Data _Severity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, bool>.Data _IsFixed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReleaseIssue, global::LightSwitchApplication.ReleaseIssue.DetailsClass, global::LightSwitchApplication.Release>.Data _Release;
            
        }
    
        #endregion
    }
    
    #endregion
}
