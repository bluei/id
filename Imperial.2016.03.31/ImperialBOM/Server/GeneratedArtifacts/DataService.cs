//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Inserting(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Inserted(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Updating(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Updated(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Deleting(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Deleted(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Validate(global::LightSwitchApplication.Contact entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Contact, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Inserting(global::LightSwitchApplication.ProductType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Inserted(global::LightSwitchApplication.ProductType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Updating(global::LightSwitchApplication.ProductType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Updated(global::LightSwitchApplication.ProductType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Deleting(global::LightSwitchApplication.ProductType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Deleted(global::LightSwitchApplication.ProductType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Validate(global::LightSwitchApplication.ProductType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updating(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updated(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Validate(global::LightSwitchApplication.Product entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Inserting(global::LightSwitchApplication.BillOfMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Inserted(global::LightSwitchApplication.BillOfMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Updating(global::LightSwitchApplication.BillOfMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Updated(global::LightSwitchApplication.BillOfMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Deleting(global::LightSwitchApplication.BillOfMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Deleted(global::LightSwitchApplication.BillOfMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Validate(global::LightSwitchApplication.BillOfMaterial entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillOfMaterials_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillOfMaterial, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Inserting(global::LightSwitchApplication.JobStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Inserted(global::LightSwitchApplication.JobStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Updating(global::LightSwitchApplication.JobStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Updated(global::LightSwitchApplication.JobStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Deleting(global::LightSwitchApplication.JobStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Deleted(global::LightSwitchApplication.JobStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Validate(global::LightSwitchApplication.JobStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Inserting(global::LightSwitchApplication.Job entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Inserted(global::LightSwitchApplication.Job entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Updating(global::LightSwitchApplication.Job entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Updated(global::LightSwitchApplication.Job entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Deleting(global::LightSwitchApplication.Job entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Deleted(global::LightSwitchApplication.Job entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Validate(global::LightSwitchApplication.Job entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Jobs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Job, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Inserting(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Inserted(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Updating(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Updated(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Deleting(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Deleted(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Validate(global::LightSwitchApplication.PurchaseOrder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Inserting(global::LightSwitchApplication.JobMasterBOM entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Inserted(global::LightSwitchApplication.JobMasterBOM entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Updating(global::LightSwitchApplication.JobMasterBOM entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Updated(global::LightSwitchApplication.JobMasterBOM entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Deleting(global::LightSwitchApplication.JobMasterBOM entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Deleted(global::LightSwitchApplication.JobMasterBOM entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Validate(global::LightSwitchApplication.JobMasterBOM entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobMasterBOM, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Inserting(global::LightSwitchApplication.JobMasterBOMItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Inserted(global::LightSwitchApplication.JobMasterBOMItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Updating(global::LightSwitchApplication.JobMasterBOMItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Updated(global::LightSwitchApplication.JobMasterBOMItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Deleting(global::LightSwitchApplication.JobMasterBOMItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Deleted(global::LightSwitchApplication.JobMasterBOMItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Validate(global::LightSwitchApplication.JobMasterBOMItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobMasterBOMItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Inserting(global::LightSwitchApplication.PurchaseOrderLine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Inserted(global::LightSwitchApplication.PurchaseOrderLine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Updating(global::LightSwitchApplication.PurchaseOrderLine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Updated(global::LightSwitchApplication.PurchaseOrderLine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Deleting(global::LightSwitchApplication.PurchaseOrderLine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Deleted(global::LightSwitchApplication.PurchaseOrderLine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Validate(global::LightSwitchApplication.PurchaseOrderLine entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLines_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderLine, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Inserting(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Inserted(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Updating(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Updated(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Deleting(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Deleted(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Validate(global::LightSwitchApplication.Message entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Message, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Inserting(global::LightSwitchApplication.Unit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Inserted(global::LightSwitchApplication.Unit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Updating(global::LightSwitchApplication.Unit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Updated(global::LightSwitchApplication.Unit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Deleting(global::LightSwitchApplication.Unit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Deleted(global::LightSwitchApplication.Unit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Validate(global::LightSwitchApplication.Unit entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Units_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Unit, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Inserting(global::LightSwitchApplication.Receipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Inserted(global::LightSwitchApplication.Receipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Updating(global::LightSwitchApplication.Receipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Updated(global::LightSwitchApplication.Receipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Deleting(global::LightSwitchApplication.Receipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Deleted(global::LightSwitchApplication.Receipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Validate(global::LightSwitchApplication.Receipt entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Receipts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Receipt, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Inserting(global::LightSwitchApplication.PurchaseOrderStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Inserted(global::LightSwitchApplication.PurchaseOrderStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Updating(global::LightSwitchApplication.PurchaseOrderStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Updated(global::LightSwitchApplication.PurchaseOrderStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Deleting(global::LightSwitchApplication.PurchaseOrderStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Deleted(global::LightSwitchApplication.PurchaseOrderStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Validate(global::LightSwitchApplication.PurchaseOrderStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Inserting(global::LightSwitchApplication.AppSetting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Inserted(global::LightSwitchApplication.AppSetting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Updating(global::LightSwitchApplication.AppSetting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Updated(global::LightSwitchApplication.AppSetting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Deleting(global::LightSwitchApplication.AppSetting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Deleted(global::LightSwitchApplication.AppSetting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Validate(global::LightSwitchApplication.AppSetting entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AppSettings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AppSetting, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Inserting(global::LightSwitchApplication.ProductCostRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Inserted(global::LightSwitchApplication.ProductCostRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Updating(global::LightSwitchApplication.ProductCostRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Updated(global::LightSwitchApplication.ProductCostRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Deleting(global::LightSwitchApplication.ProductCostRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Deleted(global::LightSwitchApplication.ProductCostRecord entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Validate(global::LightSwitchApplication.ProductCostRecord entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCostRecords_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCostRecord, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Inserting(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Inserted(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Updating(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Updated(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Deleting(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Deleted(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Validate(global::LightSwitchApplication.ProductGroup entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductGroup, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Inserting(global::LightSwitchApplication.Release entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Inserted(global::LightSwitchApplication.Release entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Updating(global::LightSwitchApplication.Release entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Updated(global::LightSwitchApplication.Release entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Deleting(global::LightSwitchApplication.Release entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Deleted(global::LightSwitchApplication.Release entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Validate(global::LightSwitchApplication.Release entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Releases_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Release, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Inserting(global::LightSwitchApplication.ReleaseIssue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Inserted(global::LightSwitchApplication.ReleaseIssue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Updating(global::LightSwitchApplication.ReleaseIssue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Updated(global::LightSwitchApplication.ReleaseIssue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Deleting(global::LightSwitchApplication.ReleaseIssue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Deleted(global::LightSwitchApplication.ReleaseIssue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Validate(global::LightSwitchApplication.ReleaseIssue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReleaseIssues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReleaseIssue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Inserting(global::LightSwitchApplication.Term entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Inserted(global::LightSwitchApplication.Term entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Updating(global::LightSwitchApplication.Term entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Updated(global::LightSwitchApplication.Term entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Deleting(global::LightSwitchApplication.Term entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Deleted(global::LightSwitchApplication.Term entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Validate(global::LightSwitchApplication.Term entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Terms_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Term, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Inserting(global::LightSwitchApplication.Explosion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Inserted(global::LightSwitchApplication.Explosion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Updating(global::LightSwitchApplication.Explosion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Updated(global::LightSwitchApplication.Explosion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Deleting(global::LightSwitchApplication.Explosion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Deleted(global::LightSwitchApplication.Explosion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Validate(global::LightSwitchApplication.Explosion entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Explosions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Explosion, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Inserting(global::LightSwitchApplication.InvoiceStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Inserted(global::LightSwitchApplication.InvoiceStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Updating(global::LightSwitchApplication.InvoiceStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Updated(global::LightSwitchApplication.InvoiceStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Deleting(global::LightSwitchApplication.InvoiceStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Deleted(global::LightSwitchApplication.InvoiceStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Validate(global::LightSwitchApplication.InvoiceStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.InvoiceStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updating(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updated(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Validate(global::LightSwitchApplication.Invoice entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Companies_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Companies_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Companies_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Customers_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Customers_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Customers_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Vendors_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vendors_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Vendors_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Vendors_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reps_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Reps_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reps_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Reps_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Reps_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JobStatuses_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobStatuses_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.JobStatus> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JobStatuses_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.JobStatus> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JobStatuses_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompaniesWithJobs_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CompaniesWithJobs_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompaniesWithJobs_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CompaniesWithJobs_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CompaniesWithJobs_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Messages_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Message> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Messages_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Message> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Messages_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchasedProducts_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchasedProducts_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchasedProducts_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchasedProducts_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchasedProducts_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessagesByStatus_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MessagesByStatus_Executing(global::System.Nullable<bool> AcknowledgedParam);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessagesByStatus_PreprocessQuery(global::System.Nullable<bool> AcknowledgedParam, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Message> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MessagesByStatus_Executed(global::System.Nullable<bool> AcknowledgedParam, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Message> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MessagesByStatus_ExecuteFailed(global::System.Nullable<bool> AcknowledgedParam, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderStatuses_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatuses_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderStatus> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderStatuses_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderStatus> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderStatuses_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MasterBOMSelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MasterBOMSelections_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MasterBOMSelections_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MasterBOMSelections_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MasterBOMSelections_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveJobs_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActiveJobs_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveJobs_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Job> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActiveJobs_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Job> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActiveJobs_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenPurchaseOrders_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OpenPurchaseOrders_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenPurchaseOrders_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OpenPurchaseOrders_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OpenPurchaseOrders_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessagesUnread_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MessagesUnread_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessagesUnread_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Message> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MessagesUnread_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Message> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MessagesUnread_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductsMadeByID_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductsMadeByID_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductsMadeByID_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductsMadeByID_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductsMadeByID_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorsWithOpenPOs_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void VendorsWithOpenPOs_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorsWithOpenPOs_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void VendorsWithOpenPOs_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void VendorsWithOpenPOs_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItemsSearch_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JobMasterBOMItemsSearch_Executing(global::System.Nullable<int> ParamJobMasterBOMId, string ParamOptLevel, global::System.Nullable<int> ParamOptDepth);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobMasterBOMItemsSearch_PreprocessQuery(global::System.Nullable<int> ParamJobMasterBOMId, string ParamOptLevel, global::System.Nullable<int> ParamOptDepth, ref global::System.Linq.IQueryable<global::LightSwitchApplication.JobMasterBOMItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JobMasterBOMItemsSearch_Executed(global::System.Nullable<int> ParamJobMasterBOMId, string ParamOptLevel, global::System.Nullable<int> ParamOptDepth, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.JobMasterBOMItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JobMasterBOMItemsSearch_ExecuteFailed(global::System.Nullable<int> ParamJobMasterBOMId, string ParamOptLevel, global::System.Nullable<int> ParamOptDepth, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POLinesMisc_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void POLinesMisc_Executing(global::System.Nullable<int> job_id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POLinesMisc_PreprocessQuery(global::System.Nullable<int> job_id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderLine> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void POLinesMisc_Executed(global::System.Nullable<int> job_id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderLine> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void POLinesMisc_ExecuteFailed(global::System.Nullable<int> job_id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsByCompany_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactsByCompany_Executing(global::System.Nullable<int> company_id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsByCompany_PreprocessQuery(global::System.Nullable<int> company_id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactsByCompany_Executed(global::System.Nullable<int> company_id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactsByCompany_ExecuteFailed(global::System.Nullable<int> company_id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactReps_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactReps_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactReps_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactReps_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactReps_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLinesSorted_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderLinesSorted_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderLinesSorted_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderLine> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderLinesSorted_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderLine> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderLinesSorted_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroupsSorted_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductGroupsSorted_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroupsSorted_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductGroup> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductGroupsSorted_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductGroup> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductGroupsSorted_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __CompaniesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Companies",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Filter);
            private static bool __Companies_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanInsert(ref result);
                return result;
            }
            private static bool __Companies_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanUpdate(ref result);
                return result;
            }
            private static bool __Companies_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanDelete(ref result);
                return result;
            }
            private static bool __Companies_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanRead(ref result);
                return result;
            }
            private static void __Companies_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserting(e);
            }
            private static void __Companies_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserted(e);
            }
            private static void __Companies_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updating(e);
            }
            private static void __Companies_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updated(e);
            }
            private static void __Companies_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleting(e);
            }
            private static void __Companies_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleted(e);
            }
            private static void __Companies_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companies_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>
                __ContactsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>(
                    "Contacts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Filter);
            private static bool __Contacts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanInsert(ref result);
                return result;
            }
            private static bool __Contacts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanUpdate(ref result);
                return result;
            }
            private static bool __Contacts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanDelete(ref result);
                return result;
            }
            private static bool __Contacts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanRead(ref result);
                return result;
            }
            private static void __Contacts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Inserting(e);
            }
            private static void __Contacts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Inserted(e);
            }
            private static void __Contacts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Updating(e);
            }
            private static void __Contacts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Updated(e);
            }
            private static void __Contacts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Deleting(e);
            }
            private static void __Contacts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Deleted(e);
            }
            private static void __Contacts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Contacts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Contact, bool>> __Contacts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Contact, bool>> filter = null;
                d.Contacts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductType>
                __ProductTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductType>(
                    "ProductTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductTypes_Filter);
            private static bool __ProductTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductTypes_CanInsert(ref result);
                return result;
            }
            private static bool __ProductTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductTypes_CanDelete(ref result);
                return result;
            }
            private static bool __ProductTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductTypes_CanRead(ref result);
                return result;
            }
            private static void __ProductTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e)
            {
                d.ProductTypes_Inserting(e);
            }
            private static void __ProductTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e)
            {
                d.ProductTypes_Inserted(e);
            }
            private static void __ProductTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e)
            {
                d.ProductTypes_Updating(e);
            }
            private static void __ProductTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e)
            {
                d.ProductTypes_Updated(e);
            }
            private static void __ProductTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e)
            {
                d.ProductTypes_Deleting(e);
            }
            private static void __ProductTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e)
            {
                d.ProductTypes_Deleted(e);
            }
            private static void __ProductTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductType, bool>> __ProductTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductType, bool>> filter = null;
                d.ProductTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __ProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "Products",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Filter);
            private static bool __Products_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanInsert(ref result);
                return result;
            }
            private static bool __Products_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanUpdate(ref result);
                return result;
            }
            private static bool __Products_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanDelete(ref result);
                return result;
            }
            private static bool __Products_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanRead(ref result);
                return result;
            }
            private static void __Products_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserting(e);
            }
            private static void __Products_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserted(e);
            }
            private static void __Products_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updating(e);
            }
            private static void __Products_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updated(e);
            }
            private static void __Products_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleting(e);
            }
            private static void __Products_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleted(e);
            }
            private static void __Products_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Products_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> __Products_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> filter = null;
                d.Products_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.BillOfMaterial>
                __BillOfMaterialsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.BillOfMaterial>(
                    "BillOfMaterials",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BillOfMaterials_Filter);
            private static bool __BillOfMaterials_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BillOfMaterials_CanInsert(ref result);
                return result;
            }
            private static bool __BillOfMaterials_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BillOfMaterials_CanUpdate(ref result);
                return result;
            }
            private static bool __BillOfMaterials_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BillOfMaterials_CanDelete(ref result);
                return result;
            }
            private static bool __BillOfMaterials_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.BillOfMaterials_CanRead(ref result);
                return result;
            }
            private static void __BillOfMaterials_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e)
            {
                d.BillOfMaterials_Inserting(e);
            }
            private static void __BillOfMaterials_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e)
            {
                d.BillOfMaterials_Inserted(e);
            }
            private static void __BillOfMaterials_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e)
            {
                d.BillOfMaterials_Updating(e);
            }
            private static void __BillOfMaterials_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e)
            {
                d.BillOfMaterials_Updated(e);
            }
            private static void __BillOfMaterials_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e)
            {
                d.BillOfMaterials_Deleting(e);
            }
            private static void __BillOfMaterials_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e)
            {
                d.BillOfMaterials_Deleted(e);
            }
            private static void __BillOfMaterials_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.BillOfMaterial e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BillOfMaterials_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillOfMaterial, bool>> __BillOfMaterials_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BillOfMaterial, bool>> filter = null;
                d.BillOfMaterials_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobStatus>
                __JobStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobStatus>(
                    "JobStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_Filter);
            private static bool __JobStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __JobStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __JobStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __JobStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobStatuses_CanRead(ref result);
                return result;
            }
            private static void __JobStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e)
            {
                d.JobStatuses_Inserting(e);
            }
            private static void __JobStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e)
            {
                d.JobStatuses_Inserted(e);
            }
            private static void __JobStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e)
            {
                d.JobStatuses_Updating(e);
            }
            private static void __JobStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e)
            {
                d.JobStatuses_Updated(e);
            }
            private static void __JobStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e)
            {
                d.JobStatuses_Deleting(e);
            }
            private static void __JobStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e)
            {
                d.JobStatuses_Deleted(e);
            }
            private static void __JobStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobStatus, bool>> __JobStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobStatus, bool>> filter = null;
                d.JobStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Job>
                __JobsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Job>(
                    "Jobs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Jobs_Filter);
            private static bool __Jobs_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Jobs_CanInsert(ref result);
                return result;
            }
            private static bool __Jobs_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Jobs_CanUpdate(ref result);
                return result;
            }
            private static bool __Jobs_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Jobs_CanDelete(ref result);
                return result;
            }
            private static bool __Jobs_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Jobs_CanRead(ref result);
                return result;
            }
            private static void __Jobs_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e)
            {
                d.Jobs_Inserting(e);
            }
            private static void __Jobs_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e)
            {
                d.Jobs_Inserted(e);
            }
            private static void __Jobs_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e)
            {
                d.Jobs_Updating(e);
            }
            private static void __Jobs_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e)
            {
                d.Jobs_Updated(e);
            }
            private static void __Jobs_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e)
            {
                d.Jobs_Deleting(e);
            }
            private static void __Jobs_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e)
            {
                d.Jobs_Deleted(e);
            }
            private static void __Jobs_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Job e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Jobs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Job, bool>> __Jobs_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Job, bool>> filter = null;
                d.Jobs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>
                __PurchaseOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>(
                    "PurchaseOrders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Filter);
            private static bool __PurchaseOrders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Inserting(e);
            }
            private static void __PurchaseOrders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Inserted(e);
            }
            private static void __PurchaseOrders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Updating(e);
            }
            private static void __PurchaseOrders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Updated(e);
            }
            private static void __PurchaseOrders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Deleting(e);
            }
            private static void __PurchaseOrders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Deleted(e);
            }
            private static void __PurchaseOrders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> __PurchaseOrders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> filter = null;
                d.PurchaseOrders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobMasterBOM>
                __JobMasterBOMsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobMasterBOM>(
                    "JobMasterBOMs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMs_Filter);
            private static bool __JobMasterBOMs_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMs_CanInsert(ref result);
                return result;
            }
            private static bool __JobMasterBOMs_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMs_CanUpdate(ref result);
                return result;
            }
            private static bool __JobMasterBOMs_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMs_CanDelete(ref result);
                return result;
            }
            private static bool __JobMasterBOMs_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMs_CanRead(ref result);
                return result;
            }
            private static void __JobMasterBOMs_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e)
            {
                d.JobMasterBOMs_Inserting(e);
            }
            private static void __JobMasterBOMs_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e)
            {
                d.JobMasterBOMs_Inserted(e);
            }
            private static void __JobMasterBOMs_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e)
            {
                d.JobMasterBOMs_Updating(e);
            }
            private static void __JobMasterBOMs_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e)
            {
                d.JobMasterBOMs_Updated(e);
            }
            private static void __JobMasterBOMs_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e)
            {
                d.JobMasterBOMs_Deleting(e);
            }
            private static void __JobMasterBOMs_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e)
            {
                d.JobMasterBOMs_Deleted(e);
            }
            private static void __JobMasterBOMs_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOM e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobMasterBOMs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobMasterBOM, bool>> __JobMasterBOMs_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobMasterBOM, bool>> filter = null;
                d.JobMasterBOMs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobMasterBOMItem>
                __JobMasterBOMItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobMasterBOMItem>(
                    "JobMasterBOMItems",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItems_Filter);
            private static bool __JobMasterBOMItems_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMItems_CanInsert(ref result);
                return result;
            }
            private static bool __JobMasterBOMItems_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMItems_CanUpdate(ref result);
                return result;
            }
            private static bool __JobMasterBOMItems_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMItems_CanDelete(ref result);
                return result;
            }
            private static bool __JobMasterBOMItems_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.JobMasterBOMItems_CanRead(ref result);
                return result;
            }
            private static void __JobMasterBOMItems_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e)
            {
                d.JobMasterBOMItems_Inserting(e);
            }
            private static void __JobMasterBOMItems_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e)
            {
                d.JobMasterBOMItems_Inserted(e);
            }
            private static void __JobMasterBOMItems_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e)
            {
                d.JobMasterBOMItems_Updating(e);
            }
            private static void __JobMasterBOMItems_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e)
            {
                d.JobMasterBOMItems_Updated(e);
            }
            private static void __JobMasterBOMItems_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e)
            {
                d.JobMasterBOMItems_Deleting(e);
            }
            private static void __JobMasterBOMItems_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e)
            {
                d.JobMasterBOMItems_Deleted(e);
            }
            private static void __JobMasterBOMItems_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.JobMasterBOMItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobMasterBOMItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobMasterBOMItem, bool>> __JobMasterBOMItems_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobMasterBOMItem, bool>> filter = null;
                d.JobMasterBOMItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderLine>
                __PurchaseOrderLinesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderLine>(
                    "PurchaseOrderLines",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLines_Filter);
            private static bool __PurchaseOrderLines_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderLines_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrderLines_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderLines_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrderLines_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderLines_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrderLines_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderLines_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrderLines_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e)
            {
                d.PurchaseOrderLines_Inserting(e);
            }
            private static void __PurchaseOrderLines_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e)
            {
                d.PurchaseOrderLines_Inserted(e);
            }
            private static void __PurchaseOrderLines_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e)
            {
                d.PurchaseOrderLines_Updating(e);
            }
            private static void __PurchaseOrderLines_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e)
            {
                d.PurchaseOrderLines_Updated(e);
            }
            private static void __PurchaseOrderLines_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e)
            {
                d.PurchaseOrderLines_Deleting(e);
            }
            private static void __PurchaseOrderLines_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e)
            {
                d.PurchaseOrderLines_Deleted(e);
            }
            private static void __PurchaseOrderLines_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderLine e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrderLines_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderLine, bool>> __PurchaseOrderLines_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderLine, bool>> filter = null;
                d.PurchaseOrderLines_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>
                __MessagesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>(
                    "Messages",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_Filter);
            private static bool __Messages_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Messages_CanInsert(ref result);
                return result;
            }
            private static bool __Messages_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Messages_CanUpdate(ref result);
                return result;
            }
            private static bool __Messages_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Messages_CanDelete(ref result);
                return result;
            }
            private static bool __Messages_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Messages_CanRead(ref result);
                return result;
            }
            private static void __Messages_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Inserting(e);
            }
            private static void __Messages_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Inserted(e);
            }
            private static void __Messages_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Updating(e);
            }
            private static void __Messages_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Updated(e);
            }
            private static void __Messages_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Deleting(e);
            }
            private static void __Messages_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Deleted(e);
            }
            private static void __Messages_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Message e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Messages_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Message, bool>> __Messages_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Message, bool>> filter = null;
                d.Messages_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Unit>
                __UnitsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Unit>(
                    "Units",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Units_Filter);
            private static bool __Units_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Units_CanInsert(ref result);
                return result;
            }
            private static bool __Units_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Units_CanUpdate(ref result);
                return result;
            }
            private static bool __Units_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Units_CanDelete(ref result);
                return result;
            }
            private static bool __Units_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Units_CanRead(ref result);
                return result;
            }
            private static void __Units_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e)
            {
                d.Units_Inserting(e);
            }
            private static void __Units_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e)
            {
                d.Units_Inserted(e);
            }
            private static void __Units_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e)
            {
                d.Units_Updating(e);
            }
            private static void __Units_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e)
            {
                d.Units_Updated(e);
            }
            private static void __Units_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e)
            {
                d.Units_Deleting(e);
            }
            private static void __Units_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e)
            {
                d.Units_Deleted(e);
            }
            private static void __Units_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Unit e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Units_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Unit, bool>> __Units_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Unit, bool>> filter = null;
                d.Units_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Receipt>
                __ReceiptsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Receipt>(
                    "Receipts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Receipts_Filter);
            private static bool __Receipts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Receipts_CanInsert(ref result);
                return result;
            }
            private static bool __Receipts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Receipts_CanUpdate(ref result);
                return result;
            }
            private static bool __Receipts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Receipts_CanDelete(ref result);
                return result;
            }
            private static bool __Receipts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Receipts_CanRead(ref result);
                return result;
            }
            private static void __Receipts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e)
            {
                d.Receipts_Inserting(e);
            }
            private static void __Receipts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e)
            {
                d.Receipts_Inserted(e);
            }
            private static void __Receipts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e)
            {
                d.Receipts_Updating(e);
            }
            private static void __Receipts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e)
            {
                d.Receipts_Updated(e);
            }
            private static void __Receipts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e)
            {
                d.Receipts_Deleting(e);
            }
            private static void __Receipts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e)
            {
                d.Receipts_Deleted(e);
            }
            private static void __Receipts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Receipt e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Receipts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Receipt, bool>> __Receipts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Receipt, bool>> filter = null;
                d.Receipts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderStatus>
                __PurchaseOrderStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderStatus>(
                    "PurchaseOrderStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_Filter);
            private static bool __PurchaseOrderStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrderStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrderStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrderStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatuses_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrderStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e)
            {
                d.PurchaseOrderStatuses_Inserting(e);
            }
            private static void __PurchaseOrderStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e)
            {
                d.PurchaseOrderStatuses_Inserted(e);
            }
            private static void __PurchaseOrderStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e)
            {
                d.PurchaseOrderStatuses_Updating(e);
            }
            private static void __PurchaseOrderStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e)
            {
                d.PurchaseOrderStatuses_Updated(e);
            }
            private static void __PurchaseOrderStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e)
            {
                d.PurchaseOrderStatuses_Deleting(e);
            }
            private static void __PurchaseOrderStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e)
            {
                d.PurchaseOrderStatuses_Deleted(e);
            }
            private static void __PurchaseOrderStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrderStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderStatus, bool>> __PurchaseOrderStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderStatus, bool>> filter = null;
                d.PurchaseOrderStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AppSetting>
                __AppSettingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AppSetting>(
                    "AppSettings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AppSettings_Filter);
            private static bool __AppSettings_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppSettings_CanInsert(ref result);
                return result;
            }
            private static bool __AppSettings_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppSettings_CanUpdate(ref result);
                return result;
            }
            private static bool __AppSettings_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppSettings_CanDelete(ref result);
                return result;
            }
            private static bool __AppSettings_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AppSettings_CanRead(ref result);
                return result;
            }
            private static void __AppSettings_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e)
            {
                d.AppSettings_Inserting(e);
            }
            private static void __AppSettings_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e)
            {
                d.AppSettings_Inserted(e);
            }
            private static void __AppSettings_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e)
            {
                d.AppSettings_Updating(e);
            }
            private static void __AppSettings_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e)
            {
                d.AppSettings_Updated(e);
            }
            private static void __AppSettings_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e)
            {
                d.AppSettings_Deleting(e);
            }
            private static void __AppSettings_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e)
            {
                d.AppSettings_Deleted(e);
            }
            private static void __AppSettings_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AppSetting e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AppSettings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AppSetting, bool>> __AppSettings_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AppSetting, bool>> filter = null;
                d.AppSettings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductCostRecord>
                __ProductCostRecordsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductCostRecord>(
                    "ProductCostRecords",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCostRecords_Filter);
            private static bool __ProductCostRecords_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCostRecords_CanInsert(ref result);
                return result;
            }
            private static bool __ProductCostRecords_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCostRecords_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductCostRecords_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCostRecords_CanDelete(ref result);
                return result;
            }
            private static bool __ProductCostRecords_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCostRecords_CanRead(ref result);
                return result;
            }
            private static void __ProductCostRecords_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e)
            {
                d.ProductCostRecords_Inserting(e);
            }
            private static void __ProductCostRecords_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e)
            {
                d.ProductCostRecords_Inserted(e);
            }
            private static void __ProductCostRecords_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e)
            {
                d.ProductCostRecords_Updating(e);
            }
            private static void __ProductCostRecords_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e)
            {
                d.ProductCostRecords_Updated(e);
            }
            private static void __ProductCostRecords_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e)
            {
                d.ProductCostRecords_Deleting(e);
            }
            private static void __ProductCostRecords_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e)
            {
                d.ProductCostRecords_Deleted(e);
            }
            private static void __ProductCostRecords_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCostRecord e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductCostRecords_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCostRecord, bool>> __ProductCostRecords_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCostRecord, bool>> filter = null;
                d.ProductCostRecords_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>
                __ProductGroupsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>(
                    "ProductGroups",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Filter);
            private static bool __ProductGroups_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanInsert(ref result);
                return result;
            }
            private static bool __ProductGroups_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductGroups_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanDelete(ref result);
                return result;
            }
            private static bool __ProductGroups_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanRead(ref result);
                return result;
            }
            private static void __ProductGroups_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Inserting(e);
            }
            private static void __ProductGroups_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Inserted(e);
            }
            private static void __ProductGroups_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Updating(e);
            }
            private static void __ProductGroups_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Updated(e);
            }
            private static void __ProductGroups_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Deleting(e);
            }
            private static void __ProductGroups_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Deleted(e);
            }
            private static void __ProductGroups_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductGroups_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductGroup, bool>> __ProductGroups_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductGroup, bool>> filter = null;
                d.ProductGroups_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Release>
                __ReleasesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Release>(
                    "Releases",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Releases_Filter);
            private static bool __Releases_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Releases_CanInsert(ref result);
                return result;
            }
            private static bool __Releases_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Releases_CanUpdate(ref result);
                return result;
            }
            private static bool __Releases_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Releases_CanDelete(ref result);
                return result;
            }
            private static bool __Releases_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Releases_CanRead(ref result);
                return result;
            }
            private static void __Releases_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e)
            {
                d.Releases_Inserting(e);
            }
            private static void __Releases_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e)
            {
                d.Releases_Inserted(e);
            }
            private static void __Releases_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e)
            {
                d.Releases_Updating(e);
            }
            private static void __Releases_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e)
            {
                d.Releases_Updated(e);
            }
            private static void __Releases_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e)
            {
                d.Releases_Deleting(e);
            }
            private static void __Releases_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e)
            {
                d.Releases_Deleted(e);
            }
            private static void __Releases_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Release e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Releases_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Release, bool>> __Releases_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Release, bool>> filter = null;
                d.Releases_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReleaseIssue>
                __ReleaseIssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReleaseIssue>(
                    "ReleaseIssues",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReleaseIssues_Filter);
            private static bool __ReleaseIssues_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReleaseIssues_CanInsert(ref result);
                return result;
            }
            private static bool __ReleaseIssues_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReleaseIssues_CanUpdate(ref result);
                return result;
            }
            private static bool __ReleaseIssues_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReleaseIssues_CanDelete(ref result);
                return result;
            }
            private static bool __ReleaseIssues_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReleaseIssues_CanRead(ref result);
                return result;
            }
            private static void __ReleaseIssues_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e)
            {
                d.ReleaseIssues_Inserting(e);
            }
            private static void __ReleaseIssues_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e)
            {
                d.ReleaseIssues_Inserted(e);
            }
            private static void __ReleaseIssues_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e)
            {
                d.ReleaseIssues_Updating(e);
            }
            private static void __ReleaseIssues_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e)
            {
                d.ReleaseIssues_Updated(e);
            }
            private static void __ReleaseIssues_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e)
            {
                d.ReleaseIssues_Deleting(e);
            }
            private static void __ReleaseIssues_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e)
            {
                d.ReleaseIssues_Deleted(e);
            }
            private static void __ReleaseIssues_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReleaseIssue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReleaseIssues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReleaseIssue, bool>> __ReleaseIssues_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReleaseIssue, bool>> filter = null;
                d.ReleaseIssues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Term>
                __TermsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Term>(
                    "Terms",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Terms_Filter);
            private static bool __Terms_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Terms_CanInsert(ref result);
                return result;
            }
            private static bool __Terms_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Terms_CanUpdate(ref result);
                return result;
            }
            private static bool __Terms_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Terms_CanDelete(ref result);
                return result;
            }
            private static bool __Terms_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Terms_CanRead(ref result);
                return result;
            }
            private static void __Terms_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e)
            {
                d.Terms_Inserting(e);
            }
            private static void __Terms_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e)
            {
                d.Terms_Inserted(e);
            }
            private static void __Terms_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e)
            {
                d.Terms_Updating(e);
            }
            private static void __Terms_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e)
            {
                d.Terms_Updated(e);
            }
            private static void __Terms_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e)
            {
                d.Terms_Deleting(e);
            }
            private static void __Terms_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e)
            {
                d.Terms_Deleted(e);
            }
            private static void __Terms_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Term e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Terms_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Term, bool>> __Terms_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Term, bool>> filter = null;
                d.Terms_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Explosion>
                __ExplosionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Explosion>(
                    "Explosions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Explosions_Filter);
            private static bool __Explosions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Explosions_CanInsert(ref result);
                return result;
            }
            private static bool __Explosions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Explosions_CanUpdate(ref result);
                return result;
            }
            private static bool __Explosions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Explosions_CanDelete(ref result);
                return result;
            }
            private static bool __Explosions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Explosions_CanRead(ref result);
                return result;
            }
            private static void __Explosions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e)
            {
                d.Explosions_Inserting(e);
            }
            private static void __Explosions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e)
            {
                d.Explosions_Inserted(e);
            }
            private static void __Explosions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e)
            {
                d.Explosions_Updating(e);
            }
            private static void __Explosions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e)
            {
                d.Explosions_Updated(e);
            }
            private static void __Explosions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e)
            {
                d.Explosions_Deleting(e);
            }
            private static void __Explosions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e)
            {
                d.Explosions_Deleted(e);
            }
            private static void __Explosions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Explosion e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Explosions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Explosion, bool>> __Explosions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Explosion, bool>> filter = null;
                d.Explosions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceStatus>
                __InvoiceStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.InvoiceStatus>(
                    "InvoiceStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceStatuses_Filter);
            private static bool __InvoiceStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __InvoiceStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __InvoiceStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __InvoiceStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceStatuses_CanRead(ref result);
                return result;
            }
            private static void __InvoiceStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e)
            {
                d.InvoiceStatuses_Inserting(e);
            }
            private static void __InvoiceStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e)
            {
                d.InvoiceStatuses_Inserted(e);
            }
            private static void __InvoiceStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e)
            {
                d.InvoiceStatuses_Updating(e);
            }
            private static void __InvoiceStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e)
            {
                d.InvoiceStatuses_Updated(e);
            }
            private static void __InvoiceStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e)
            {
                d.InvoiceStatuses_Deleting(e);
            }
            private static void __InvoiceStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e)
            {
                d.InvoiceStatuses_Deleted(e);
            }
            private static void __InvoiceStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.InvoiceStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.InvoiceStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.InvoiceStatus, bool>> __InvoiceStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.InvoiceStatus, bool>> filter = null;
                d.InvoiceStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __InvoicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Invoices_Filter);
            private static bool __Invoices_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanInsert(ref result);
                return result;
            }
            private static bool __Invoices_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanUpdate(ref result);
                return result;
            }
            private static bool __Invoices_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanDelete(ref result);
                return result;
            }
            private static bool __Invoices_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Invoices_CanRead(ref result);
                return result;
            }
            private static void __Invoices_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserting(e);
            }
            private static void __Invoices_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserted(e);
            }
            private static void __Invoices_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updating(e);
            }
            private static void __Invoices_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updated(e);
            }
            private static void __Invoices_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleting(e);
            }
            private static void __Invoices_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleted(e);
            }
            private static void __Invoices_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Invoices_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> __Invoices_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> filter = null;
                d.Invoices_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __Companies_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Companies_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_All_PreprocessQuery);
            private static bool __Companies_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Companies_All_CanExecute(ref r);
                return r;
            }
            private static void __Companies_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Companies_All_Executing();
            }
            private static void __Companies_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Companies_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company>)args[0]);
            }
            private static void __Companies_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Companies_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Companies_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Company>)args[0];
                d.Companies_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __CustomersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Customers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_PreprocessQuery);
            private static bool __Customers_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Customers_CanExecute(ref r);
                return r;
            }
            private static void __Customers_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_Executing();
            }
            private static void __Customers_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Customers_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company>)args[0]);
            }
            private static void __Customers_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Customers_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Customers_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Company>)args[0];
                d.Customers_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __VendorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Vendors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Vendors_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Vendors_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Vendors_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Vendors_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Vendors_PreprocessQuery);
            private static bool __Vendors_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Vendors_CanExecute(ref r);
                return r;
            }
            private static void __Vendors_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Vendors_Executing();
            }
            private static void __Vendors_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Vendors_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company>)args[0]);
            }
            private static void __Vendors_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Vendors_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Vendors_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Company>)args[0];
                d.Vendors_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __RepsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Reps",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Reps_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Reps_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Reps_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Reps_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Reps_PreprocessQuery);
            private static bool __Reps_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Reps_CanExecute(ref r);
                return r;
            }
            private static void __Reps_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Reps_Executing();
            }
            private static void __Reps_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Reps_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company>)args[0]);
            }
            private static void __Reps_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Reps_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Reps_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Company>)args[0];
                d.Reps_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobStatus>
                __JobStatuses_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobStatus>(
                    "JobStatuses_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobStatuses_All_PreprocessQuery);
            private static bool __JobStatuses_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.JobStatuses_All_CanExecute(ref r);
                return r;
            }
            private static void __JobStatuses_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.JobStatuses_All_Executing();
            }
            private static void __JobStatuses_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.JobStatuses_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.JobStatus>)args[0]);
            }
            private static void __JobStatuses_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.JobStatuses_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __JobStatuses_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.JobStatus> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.JobStatus>)args[0];
                d.JobStatuses_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __CompaniesWithJobsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "CompaniesWithJobs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CompaniesWithJobs_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CompaniesWithJobs_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CompaniesWithJobs_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CompaniesWithJobs_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CompaniesWithJobs_PreprocessQuery);
            private static bool __CompaniesWithJobs_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CompaniesWithJobs_CanExecute(ref r);
                return r;
            }
            private static void __CompaniesWithJobs_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CompaniesWithJobs_Executing();
            }
            private static void __CompaniesWithJobs_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CompaniesWithJobs_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company>)args[0]);
            }
            private static void __CompaniesWithJobs_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CompaniesWithJobs_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __CompaniesWithJobs_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Company>)args[0];
                d.CompaniesWithJobs_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>
                __Messages_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>(
                    "Messages_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Messages_All_PreprocessQuery);
            private static bool __Messages_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Messages_All_CanExecute(ref r);
                return r;
            }
            private static void __Messages_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Messages_All_Executing();
            }
            private static void __Messages_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Messages_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Message>)args[0]);
            }
            private static void __Messages_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Messages_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Messages_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Message> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Message>)args[0];
                d.Messages_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __PurchasedProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "PurchasedProducts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchasedProducts_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchasedProducts_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchasedProducts_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchasedProducts_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchasedProducts_PreprocessQuery);
            private static bool __PurchasedProducts_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PurchasedProducts_CanExecute(ref r);
                return r;
            }
            private static void __PurchasedProducts_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchasedProducts_Executing();
            }
            private static void __PurchasedProducts_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchasedProducts_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __PurchasedProducts_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PurchasedProducts_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PurchasedProducts_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.PurchasedProducts_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>
                __MessagesByStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>(
                    "MessagesByStatus",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesByStatus_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesByStatus_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesByStatus_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesByStatus_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesByStatus_PreprocessQuery);
            private static bool __MessagesByStatus_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MessagesByStatus_CanExecute(ref r);
                return r;
            }
            private static void __MessagesByStatus_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MessagesByStatus_Executing((global::System.Nullable<bool>)args[0]);
            }
            private static void __MessagesByStatus_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MessagesByStatus_Executed((global::System.Nullable<bool>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Message>)args[1]);
            }
            private static void __MessagesByStatus_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MessagesByStatus_ExecuteFailed((global::System.Nullable<bool>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __MessagesByStatus_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Message> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Message>)args[1];
                d.MessagesByStatus_PreprocessQuery((global::System.Nullable<bool>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderStatus>
                __PurchaseOrderStatuses_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderStatus>(
                    "PurchaseOrderStatuses_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderStatuses_All_PreprocessQuery);
            private static bool __PurchaseOrderStatuses_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PurchaseOrderStatuses_All_CanExecute(ref r);
                return r;
            }
            private static void __PurchaseOrderStatuses_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderStatuses_All_Executing();
            }
            private static void __PurchaseOrderStatuses_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderStatuses_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderStatus>)args[0]);
            }
            private static void __PurchaseOrderStatuses_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PurchaseOrderStatuses_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PurchaseOrderStatuses_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderStatus> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderStatus>)args[0];
                d.PurchaseOrderStatuses_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __MasterBOMSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "MasterBOMSelections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MasterBOMSelections_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MasterBOMSelections_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MasterBOMSelections_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MasterBOMSelections_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MasterBOMSelections_PreprocessQuery);
            private static bool __MasterBOMSelections_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MasterBOMSelections_CanExecute(ref r);
                return r;
            }
            private static void __MasterBOMSelections_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MasterBOMSelections_Executing();
            }
            private static void __MasterBOMSelections_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MasterBOMSelections_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __MasterBOMSelections_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MasterBOMSelections_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MasterBOMSelections_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.MasterBOMSelections_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Job>
                __ActiveJobsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Job>(
                    "ActiveJobs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveJobs_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveJobs_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveJobs_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveJobs_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveJobs_PreprocessQuery);
            private static bool __ActiveJobs_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActiveJobs_CanExecute(ref r);
                return r;
            }
            private static void __ActiveJobs_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActiveJobs_Executing();
            }
            private static void __ActiveJobs_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActiveJobs_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Job>)args[0]);
            }
            private static void __ActiveJobs_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActiveJobs_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ActiveJobs_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Job> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Job>)args[0];
                d.ActiveJobs_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>
                __OpenPurchaseOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>(
                    "OpenPurchaseOrders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenPurchaseOrders_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenPurchaseOrders_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenPurchaseOrders_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenPurchaseOrders_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OpenPurchaseOrders_PreprocessQuery);
            private static bool __OpenPurchaseOrders_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.OpenPurchaseOrders_CanExecute(ref r);
                return r;
            }
            private static void __OpenPurchaseOrders_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OpenPurchaseOrders_Executing();
            }
            private static void __OpenPurchaseOrders_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OpenPurchaseOrders_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder>)args[0]);
            }
            private static void __OpenPurchaseOrders_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.OpenPurchaseOrders_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __OpenPurchaseOrders_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder>)args[0];
                d.OpenPurchaseOrders_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>
                __MessagesUnreadEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Message>(
                    "MessagesUnread",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesUnread_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesUnread_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesUnread_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesUnread_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MessagesUnread_PreprocessQuery);
            private static bool __MessagesUnread_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MessagesUnread_CanExecute(ref r);
                return r;
            }
            private static void __MessagesUnread_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MessagesUnread_Executing();
            }
            private static void __MessagesUnread_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MessagesUnread_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Message>)args[0]);
            }
            private static void __MessagesUnread_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MessagesUnread_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MessagesUnread_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Message> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Message>)args[0];
                d.MessagesUnread_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __ProductsMadeByIDEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "ProductsMadeByID",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsMadeByID_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsMadeByID_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsMadeByID_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsMadeByID_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsMadeByID_PreprocessQuery);
            private static bool __ProductsMadeByID_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductsMadeByID_CanExecute(ref r);
                return r;
            }
            private static void __ProductsMadeByID_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductsMadeByID_Executing();
            }
            private static void __ProductsMadeByID_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductsMadeByID_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __ProductsMadeByID_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductsMadeByID_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductsMadeByID_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.ProductsMadeByID_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __VendorsWithOpenPOsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "VendorsWithOpenPOs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__VendorsWithOpenPOs_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__VendorsWithOpenPOs_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__VendorsWithOpenPOs_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__VendorsWithOpenPOs_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__VendorsWithOpenPOs_PreprocessQuery);
            private static bool __VendorsWithOpenPOs_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.VendorsWithOpenPOs_CanExecute(ref r);
                return r;
            }
            private static void __VendorsWithOpenPOs_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.VendorsWithOpenPOs_Executing();
            }
            private static void __VendorsWithOpenPOs_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.VendorsWithOpenPOs_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company>)args[0]);
            }
            private static void __VendorsWithOpenPOs_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.VendorsWithOpenPOs_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __VendorsWithOpenPOs_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Company> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Company>)args[0];
                d.VendorsWithOpenPOs_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobMasterBOMItem>
                __JobMasterBOMItemsSearchEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.JobMasterBOMItem>(
                    "JobMasterBOMItemsSearch",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItemsSearch_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItemsSearch_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItemsSearch_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItemsSearch_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__JobMasterBOMItemsSearch_PreprocessQuery);
            private static bool __JobMasterBOMItemsSearch_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.JobMasterBOMItemsSearch_CanExecute(ref r);
                return r;
            }
            private static void __JobMasterBOMItemsSearch_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.JobMasterBOMItemsSearch_Executing((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<int>)args[2]);
            }
            private static void __JobMasterBOMItemsSearch_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.JobMasterBOMItemsSearch_Executed((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<int>)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.JobMasterBOMItem>)args[3]);
            }
            private static void __JobMasterBOMItemsSearch_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.JobMasterBOMItemsSearch_ExecuteFailed((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<int>)args[2], ex);
            }
            private static global::System.Linq.IQueryable __JobMasterBOMItemsSearch_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.JobMasterBOMItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.JobMasterBOMItem>)args[3];
                d.JobMasterBOMItemsSearch_PreprocessQuery((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Nullable<int>)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderLine>
                __POLinesMiscEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderLine>(
                    "POLinesMisc",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__POLinesMisc_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__POLinesMisc_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__POLinesMisc_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__POLinesMisc_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__POLinesMisc_PreprocessQuery);
            private static bool __POLinesMisc_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.POLinesMisc_CanExecute(ref r);
                return r;
            }
            private static void __POLinesMisc_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.POLinesMisc_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __POLinesMisc_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.POLinesMisc_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderLine>)args[1]);
            }
            private static void __POLinesMisc_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.POLinesMisc_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __POLinesMisc_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderLine> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderLine>)args[1];
                d.POLinesMisc_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>
                __ContactsByCompanyEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>(
                    "ContactsByCompany",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsByCompany_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsByCompany_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsByCompany_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsByCompany_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsByCompany_PreprocessQuery);
            private static bool __ContactsByCompany_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactsByCompany_CanExecute(ref r);
                return r;
            }
            private static void __ContactsByCompany_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsByCompany_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ContactsByCompany_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsByCompany_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact>)args[1]);
            }
            private static void __ContactsByCompany_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactsByCompany_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContactsByCompany_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contact>)args[1];
                d.ContactsByCompany_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>
                __ContactRepsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>(
                    "ContactReps",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactReps_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactReps_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactReps_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactReps_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactReps_PreprocessQuery);
            private static bool __ContactReps_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactReps_CanExecute(ref r);
                return r;
            }
            private static void __ContactReps_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactReps_Executing();
            }
            private static void __ContactReps_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactReps_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact>)args[0]);
            }
            private static void __ContactReps_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactReps_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ContactReps_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contact>)args[0];
                d.ContactReps_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderLine>
                __PurchaseOrderLinesSortedEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderLine>(
                    "PurchaseOrderLinesSorted",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLinesSorted_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLinesSorted_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLinesSorted_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLinesSorted_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderLinesSorted_PreprocessQuery);
            private static bool __PurchaseOrderLinesSorted_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PurchaseOrderLinesSorted_CanExecute(ref r);
                return r;
            }
            private static void __PurchaseOrderLinesSorted_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderLinesSorted_Executing();
            }
            private static void __PurchaseOrderLinesSorted_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderLinesSorted_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderLine>)args[0]);
            }
            private static void __PurchaseOrderLinesSorted_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PurchaseOrderLinesSorted_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PurchaseOrderLinesSorted_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderLine> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderLine>)args[0];
                d.PurchaseOrderLinesSorted_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>
                __ProductGroupsSortedEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>(
                    "ProductGroupsSorted",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsSorted_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsSorted_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsSorted_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsSorted_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsSorted_PreprocessQuery);
            private static bool __ProductGroupsSorted_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductGroupsSorted_CanExecute(ref r);
                return r;
            }
            private static void __ProductGroupsSorted_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductGroupsSorted_Executing();
            }
            private static void __ProductGroupsSorted_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductGroupsSorted_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductGroup>)args[0]);
            }
            private static void __ProductGroupsSorted_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductGroupsSorted_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductGroupsSorted_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductGroup> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductGroup>)args[0];
                d.ProductGroupsSorted_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the XtraReportsServiceData datasource.
    /// </summary>
    public sealed partial class XtraReportsServiceDataService
        : global::LightSwitchApplication.XtraReportsServiceData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public XtraReportsServiceDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_Inserting(global::LightSwitchApplication.MessageEnvelope entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_Inserted(global::LightSwitchApplication.MessageEnvelope entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_Deleting(global::LightSwitchApplication.MessageEnvelope entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_Deleted(global::LightSwitchApplication.MessageEnvelope entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessageEnvelopes_Validate(global::LightSwitchApplication.MessageEnvelope entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.XtraReportsServiceDataService, global::LightSwitchApplication.MessageEnvelope>
                __MessageEnvelopesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.XtraReportsServiceDataService, global::LightSwitchApplication.MessageEnvelope>(
                    "MessageEnvelopes",
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_CanInsert,
                    null,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_CanDelete,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_CanRead,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_Inserting,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_Inserted,
                    null,
                    null,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_Deleting,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_Deleted,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__MessageEnvelopes_Validate,
                    null);
            private static bool __MessageEnvelopes_CanInsert(global::LightSwitchApplication.XtraReportsServiceDataService d)
            {
                bool result = true;
                d.MessageEnvelopes_CanInsert(ref result);
                return result;
            }
            private static bool __MessageEnvelopes_CanDelete(global::LightSwitchApplication.XtraReportsServiceDataService d)
            {
                bool result = true;
                d.MessageEnvelopes_CanDelete(ref result);
                return result;
            }
            private static bool __MessageEnvelopes_CanRead(global::LightSwitchApplication.XtraReportsServiceDataService d)
            {
                bool result = true;
                d.MessageEnvelopes_CanRead(ref result);
                return result;
            }
            private static void __MessageEnvelopes_Inserting(global::LightSwitchApplication.XtraReportsServiceDataService d, global::LightSwitchApplication.MessageEnvelope e)
            {
                d.MessageEnvelopes_Inserting(e);
            }
            private static void __MessageEnvelopes_Inserted(global::LightSwitchApplication.XtraReportsServiceDataService d, global::LightSwitchApplication.MessageEnvelope e)
            {
                d.MessageEnvelopes_Inserted(e);
            }
            private static void __MessageEnvelopes_Deleting(global::LightSwitchApplication.XtraReportsServiceDataService d, global::LightSwitchApplication.MessageEnvelope e)
            {
                d.MessageEnvelopes_Deleting(e);
            }
            private static void __MessageEnvelopes_Deleted(global::LightSwitchApplication.XtraReportsServiceDataService d, global::LightSwitchApplication.MessageEnvelope e)
            {
                d.MessageEnvelopes_Deleted(e);
            }
            private static void __MessageEnvelopes_Validate(global::LightSwitchApplication.XtraReportsServiceDataService d, global::LightSwitchApplication.MessageEnvelope e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MessageEnvelopes_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.XtraReportsServiceDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.XtraReportsServiceDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.XtraReportsServiceDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.XtraReportsServiceDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.XtraReportsServiceDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.XtraReportsServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.XtraReportsServiceDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.XtraReportsServiceDataService>(
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.XtraReportsServiceDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.XtraReportsServiceDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.XtraReportsServiceDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.XtraReportsServiceDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
